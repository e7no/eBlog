<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ECstore集群部署方案</title>
      <link href="/2018/05/01/ECstore%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88/"/>
      <content type="html"><![CDATA[<h6 id="基于阿里云搭建的轻量级架构"><a href="#基于阿里云搭建的轻量级架构" class="headerlink" title="基于阿里云搭建的轻量级架构"></a><center>基于阿里云搭建的轻量级架构</center></h6><a id="more"></a><p><img src="https://img.e7no.com/18-5-8/5530140.jpg" alt=""><br><!-- more --></p><blockquote><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h3></blockquote><h4 id="1-1设计目标"><a href="#1-1设计目标" class="headerlink" title="1.1设计目标"></a>1.1设计目标</h4><ul><li>保障业务持续性，避免单点故障</li><li>保障业务可用性，提升系统性能，提供系统业务承载能力<h4 id="1-2设计思路"><a href="#1-2设计思路" class="headerlink" title="1.2设计思路"></a>1.2设计思路</h4><h6 id="采用“独立服务器角色”的思路，使每个服务器角色（任务分发、运算、中间件、缓存等）独立的存在不同主机上，各司其职，以整体提供系统性能，加强业务承载能力。"><a href="#采用“独立服务器角色”的思路，使每个服务器角色（任务分发、运算、中间件、缓存等）独立的存在不同主机上，各司其职，以整体提供系统性能，加强业务承载能力。" class="headerlink" title="采用“独立服务器角色”的思路，使每个服务器角色（任务分发、运算、中间件、缓存等）独立的存在不同主机上，各司其职，以整体提供系统性能，加强业务承载能力。"></a>采用“独立服务器角色”的思路，使每个服务器角色（任务分发、运算、中间件、缓存等）独立的存在不同主机上，各司其职，以整体提供系统性能，加强业务承载能力。</h6><h4 id="1-3优点"><a href="#1-3优点" class="headerlink" title="1.3优点"></a>1.3优点</h4></li><li>提高服务器工作效率，减轻服务器压力，提高处理响应速度，分担压力</li><li>发生服务器宕机或其他服务器事故后，能快速定位问题源</li><li>各服务器角色独立，排查、排除问题方便</li><li>可靠性高，非关键性节点服务器（中间件、缓存）宕机，网站仍能访问<h4 id="1-4缺点"><a href="#1-4缺点" class="headerlink" title="1.4缺点"></a>1.4缺点</h4></li><li>配置成本高，运维难度增大<blockquote><h3 id="2-系统架构方案"><a href="#2-系统架构方案" class="headerlink" title="2 系统架构方案"></a>2 系统架构方案</h3></blockquote></li></ul><p>基于阿里云产品资源，设计的轻量级架构，一般可以保持比较有效的业务连续性。<br>后端架构使用阿里云服务搭建，其中RDS为主从数据库集群，并配备灾备实例。ECS搭配NAS可根据业务量动态弹性伸缩和扩容，其余服务均采用单实例的方式远程调用。</p><p><em>搭建VPC的大体框架思路如下图:</em></p><p><img src="https://img.e7no.com/18-5-8/13337899.jpg" alt="image"></p><p><img src="https://img.e7no.com/18-5-8/64485211.jpg" alt="image"></p> <center>阿里云轻量级架构（图1）相比传统集群架构（图2），性能更高，易部署易运维，成本低。</center><h4 id="2-1平台角色划分"><a href="#2-1平台角色划分" class="headerlink" title="2.1平台角色划分"></a>2.1平台角色划分</h4><p>系统架构初期采用1负SLB，2ECS，1RDS，1Reids，1Memcache，1NAS，1OSS各司其职，组网后可以达到一定的可靠性、可用性，具体设计如下：</p><ul><li>负载均衡服务器：阿里云负载均衡SLB</li><li>主ECS-master服务器：PHP+Nginx</li><li>从ECS-slave服务器：  PHP+Nginx +Crontab</li><li>文件服务器：NAS文件存储</li><li>数据库服务器：RDS</li><li>中间件服务器：Redis+Memcache</li><li>静态资源：OSS<h4 id="2-2资源介绍"><a href="#2-2资源介绍" class="headerlink" title="2.2资源介绍"></a>2.2资源介绍</h4><h5 id="VPC"><a href="#VPC" class="headerlink" title="VPC"></a><strong>VPC</strong></h5></li></ul><h5 id="搭建VPC的优势："><a href="#搭建VPC的优势：" class="headerlink" title="搭建VPC的优势："></a>搭建VPC的优势：</h5><ol><li>以将业务数据库和业务服务器放置在可以自己掌握的同一内网，可以提高一些安全性。</li><li>间通过内网访问的流量是不收费的。所以在选购服务时，带宽可以选择流量版，这样在保证带宽速率的同时，还可以极大的减少运维费用。</li><li>这个架构中，ECS仅处理业务逻辑，不存储文件资源。大部分文件资源都走NAS存储挂载，图片资源用CDN。</li><li>网访问，稳定而且速度快。<h4 id="业务数据层"><a href="#业务数据层" class="headerlink" title="业务数据层"></a><strong>业务数据层</strong></h4><h5 id="RDS"><a href="#RDS" class="headerlink" title="RDS"></a><em>RDS</em></h5>项目一开始，RDS选购的是共享型单实例的，随着业务量的提升，可以多区域部署只读实例。另外，保险起见，主实例可以配有一个灾备实例，防止意外发生。<h5 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a><em>Redis</em></h5>用它做数据缓存，响应速度非常快。而且，因为是放置在内网的且只能内网访问，所以安全性也很高。采用Redis KVstore，主要存储网站配置信息，web接到任务指令后，针对此类信息直接调用，减轻Mysql的压力。<h5 id="Memcache"><a href="#Memcache" class="headerlink" title="Memcache"></a><em>Memcache</em></h5>在ecstore中提供了kvstore存储的方式来对数据量大的情况下进行优化。kvstore 是以 key-&gt;value 数据结构进行存储。kstore的非持久存储是以memcache的方式存储，主要存储前端缓存、session会话，web接到任务指令后，针对此类信息直接调用，减轻Mysql的压力，极大缓解对后端存储的压力，提高网站或应用的响应速度<h4 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a><strong>静态资源</strong></h4>七牛云CDN，云存储静态资源，CDN(内容分发网络)可以加速静态资源的下载速度。<h4 id="服务器集群"><a href="#服务器集群" class="headerlink" title="服务器集群"></a><strong>服务器集群</strong></h4><h5 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a><em>负载均衡</em></h5>购买阿里云的负载均衡实例(注意要买带公网ip的)。由该负载均衡实例接收请求后，会分发到内部服务器。<h5 id="主ECS-高权重"><a href="#主ECS-高权重" class="headerlink" title="主ECS-高权重"></a><strong>主ECS-高权重</strong></h5>服务器只存放逻辑代码，所以当需求量增加时，只需增加此类服务器的个数即可<h5 id="从ECS-低权重"><a href="#从ECS-低权重" class="headerlink" title="从ECS-低权重"></a><strong>从ECS-低权重</strong></h5>ECStore涉及到定时任务、队列服务，全部由最低权重那台ECS承担，其他ECS web 机不做crontab 任务<h4 id="NAS存储"><a href="#NAS存储" class="headerlink" title="NAS存储"></a><strong>NAS存储</strong></h4>文件存储 NAS是一种分布式的网络文件存储，为ECS提供安全、无限容量、高性能、高可靠、简单易用的文件存储服务。实现单一挂载，多台实例共享，便于动态扩展。<br><img src="https://img.e7no.com/18-5-8/44739613.jpg" alt="image"></li></ol><p>横向扩容：根据业务需求，新增集群节点，新购ESC，按单机部署，挂载文件盘即可实现，扩展便捷，随业务动态增减节点，以性能最优成本最低为主要部署方式。</p><h4 id="服务器安全"><a href="#服务器安全" class="headerlink" title="服务器安全"></a><strong>服务器安全</strong></h4><h5 id="运维层面"><a href="#运维层面" class="headerlink" title="运维层面"></a><em>运维层面</em></h5><ol><li>选购了阿里云的web防火墙和态势感知的服务。这两个服务可以实时监控服务器状态，识别并跟踪攻击来源和类型，可以说，用这两个工具也节省了很多人力成本。阿里云还有其它安全类产品，可以根据项目选购，使用起来也都很方便。</li><li>配置firewalld。<h5 id="业务层面"><a href="#业务层面" class="headerlink" title="业务层面"></a><em>业务层面</em></h5><h6 id="针对接口访问的安全性，主要做了以下工作"><a href="#针对接口访问的安全性，主要做了以下工作" class="headerlink" title="针对接口访问的安全性，主要做了以下工作"></a>针对接口访问的安全性，主要做了以下工作</h6>1.签名验证：防止伪造请求<br>2.https访问<br>3.部分敏感数据，使用RSA非对称加密<h4 id="2-2软件配备"><a href="#2-2软件配备" class="headerlink" title="2.2软件配备"></a>2.2软件配备</h4></li></ol><table><thead><tr><th>软件</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>Linux</td><td>Centos64位6.x</td><td>作为电商平台的基础操作架构稳定、高效、安全</td></tr><tr><td>Nginx</td><td>openresty/1.9.7.4</td><td>高性能Web服务器，并发性能强</td></tr><tr><td>PHP</td><td>5.6.19</td><td>php脚本解析引擎，运行于fast cgi模式下</td></tr><tr><td>Memcache</td><td>1.4.4</td><td>高速缓存提升查询速度</td></tr><tr><td>Redis</td><td>3.0.3</td><td>Kvstore数据存储，为mysql减压</td></tr><tr><td>RDS</td><td>Mysql 5.6</td><td>提供稳定、高性能、安全可靠的数据库服务</td></tr><tr><td>NAS</td><td>性能型</td><td>为应用的工作负载提供高吞吐量与 IOPS、低时延的存储性能</td></tr><tr><td>OSS</td><td>按需</td><td>海量、安全、低成本、高可靠的云存储服务</td></tr></tbody></table><blockquote><h4 id="总结评价"><a href="#总结评价" class="headerlink" title="总结评价"></a>总结评价</h4><h5 id="这套架构基本上可以完全满足项目初期的业务需要，而且所有的云服务费用总和也非常少-相比于自建服务器机房-。随着业务量的提升，可以逐步升级配置以应对需求，还可以在短时间内临时性的提高并发处理能力。总结起来就是省钱、省时、省力。"><a href="#这套架构基本上可以完全满足项目初期的业务需要，而且所有的云服务费用总和也非常少-相比于自建服务器机房-。随着业务量的提升，可以逐步升级配置以应对需求，还可以在短时间内临时性的提高并发处理能力。总结起来就是省钱、省时、省力。" class="headerlink" title="这套架构基本上可以完全满足项目初期的业务需要，而且所有的云服务费用总和也非常少(相比于自建服务器机房)。随着业务量的提升，可以逐步升级配置以应对需求，还可以在短时间内临时性的提高并发处理能力。总结起来就是省钱、省时、省力。"></a>这套架构基本上可以完全满足项目初期的业务需要，而且所有的云服务费用总和也非常少(相比于自建服务器机房)。随着业务量的提升，可以逐步升级配置以应对需求，还可以在短时间内临时性的提高并发处理能力。总结起来就是省钱、省时、省力。</h5></blockquote><p>++附：具体部署内容和流程见《服务器部署内容说明》++</p>]]></content>
      
      <categories>
          
          <category> 集群 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ecstore </tag>
            
            <tag> linux </tag>
            
            <tag> slb </tag>
            
            <tag> ecs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>负载均衡下配置HTTPS</title>
      <link href="/2018/02/01/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B8%8B%E9%85%8D%E7%BD%AEHTTPS/"/>
      <content type="html"><![CDATA[<blockquote><h3 id="负载均衡SLB转发443端口到服务器的80端口配置SSL"><a href="#负载均衡SLB转发443端口到服务器的80端口配置SSL" class="headerlink" title="负载均衡SLB转发443端口到服务器的80端口配置SSL"></a>负载均衡SLB转发443端口到服务器的80端口配置SSL</h3></blockquote><ol><li>修改Nginx配置项</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/vhosts/xxx.conf</span><br></pre></td></tr></table></figure><ol><li>新增 fastcgi_param HTTPS 项</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   location ~ .*\.php.*&#123; </span><br><span class="line">       fastcgi_param HTTPS on; #attention!#  </span><br><span class="line">       include php_fcgi.conf;</span><br><span class="line">       include pathinfo.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>该配置方式也可以用于开启Ecstore的HTTPS,配置完重启后需要执行cmd update.</p></blockquote>]]></content>
      
      <categories>
          
          <category> HTTPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SLB </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows下用Vagrant搭建Linux开发环境</title>
      <link href="/2017/09/01/Windows%E4%B8%8B%E7%94%A8Vagrant%E6%90%AD%E5%BB%BALinux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <content type="html"><![CDATA[<blockquote><p>Vagrant下载地址：<a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noopener">https://www.vagrantup.com/downloads.html</a></p></blockquote><blockquote><p>VirtualBox下载地址：<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a></p></blockquote><blockquote><p>VagrantBox镜像下载地址：<a href="http://www.vagrantbox.es" target="_blank" rel="noopener">http://www.vagrantbox.es/</a></p></blockquote><h6 id="执行终端-GitBash-或者-cmd"><a href="#执行终端-GitBash-或者-cmd" class="headerlink" title="执行终端: GitBash 或者 cmd"></a>执行终端: GitBash 或者 cmd</h6><h3 id="1-安装软件"><a href="#1-安装软件" class="headerlink" title="1.安装软件"></a>1.安装软件</h3><h5 id="先安装VirtualBox-然后安装Vagrant"><a href="#先安装VirtualBox-然后安装Vagrant" class="headerlink" title="先安装VirtualBox,然后安装Vagrant"></a>先安装VirtualBox,然后安装Vagrant</h5><h3 id="2-1-直接在线拉取镜像"><a href="#2-1-直接在线拉取镜像" class="headerlink" title="2.1 直接在线拉取镜像"></a>2.1 直接在线拉取镜像</h3><h5 id="https-www-virtualbox-org-wiki-Downloads"><a href="#https-www-virtualbox-org-wiki-Downloads" class="headerlink" title="https://www.virtualbox.org/wiki/Downloads"></a><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a></h5><p>备注：{title} box命名 {url} 镜像地址  （在线拉镜像速度会比较慢）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add &#123;title&#125; &#123;url&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-或导入下载镜像"><a href="#2-2-或导入下载镜像" class="headerlink" title="2.2 或导入下载镜像"></a>2.2 或导入下载镜像</h3><h6 id="把下载的centos-6-8-x86-64-box复制到本目录-D-www-box下，执行"><a href="#把下载的centos-6-8-x86-64-box复制到本目录-D-www-box下，执行" class="headerlink" title="把下载的centos-6.8-x86_64.box复制到本目录 D:www/box下，执行"></a>把下载的centos-6.8-x86_64.box复制到本目录 D:www/box下，执行</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add centos6.8 centos-6.8-x86_64.box</span><br></pre></td></tr></table></figure><h3 id="3-初始化Box"><a href="#3-初始化Box" class="headerlink" title="3.初始化Box"></a>3.初始化Box</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant init &#123;title&#125;</span><br></pre></td></tr></table></figure><h3 id="4-启动Box"><a href="#4-启动Box" class="headerlink" title="4.启动Box"></a>4.启动Box</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure><h3 id="5-配置Vagrantfile-常用配置"><a href="#5-配置Vagrantfile-常用配置" class="headerlink" title="5.配置Vagrantfile-常用配置"></a>5.配置Vagrantfile-常用配置</h3><ul><li><h4 id="box命名"><a href="#box命名" class="headerlink" title="box命名"></a>box命名</h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vm.box = &quot;centos6.7&quot;</span><br></pre></td></tr></table></figure><ul><li><h4 id="端口映射-–-可以添加多个"><a href="#端口映射-–-可以添加多个" class="headerlink" title="端口映射 – 可以添加多个"></a>端口映射 – <em>可以添加多个</em></h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config.vm.network &quot;forwarded_port&quot;, guest: 80, host: 80</span><br><span class="line">config.vm.network &quot;forwarded_port&quot;, guest: 87, host: 8087</span><br><span class="line">config.vm.network &quot;forwarded_port&quot;, guest: 3306, host: 33060</span><br></pre></td></tr></table></figure><ul><li><h4 id="目录映射-可以不设置，默认将Linux下的vagrant共享到当前box目录-–-表示把本机的data目录共享到虚拟机里的-var-www目录"><a href="#目录映射-可以不设置，默认将Linux下的vagrant共享到当前box目录-–-表示把本机的data目录共享到虚拟机里的-var-www目录" class="headerlink" title="目录映射(可以不设置，默认将Linux下的vagrant共享到当前box目录) – 表示把本机的data目录共享到虚拟机里的/var/www目录"></a>目录映射(可以不设置，默认将Linux下的vagrant共享到当前box目录) – <em>表示把本机的data目录共享到虚拟机里的/var/www目录</em></h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vm.synced_folder &quot;D:/www&quot;, &quot;/var/www/html&quot;</span><br></pre></td></tr></table></figure><ul><li><h4 id="ip设置"><a href="#ip设置" class="headerlink" title="ip设置"></a>ip设置</h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.vm.network &quot;public_network&quot;,ip:&quot;192.168.56.1&quot;</span><br></pre></td></tr></table></figure><h3 id="6-重启vagrant加载新的配置项"><a href="#6-重启vagrant加载新的配置项" class="headerlink" title="6.重启vagrant加载新的配置项"></a>6.重启vagrant加载新的配置项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant reload</span><br></pre></td></tr></table></figure><h3 id="7-导出Box在其他机器上运行，免去重新部署"><a href="#7-导出Box在其他机器上运行，免去重新部署" class="headerlink" title="7.导出Box在其他机器上运行，免去重新部署"></a>7.导出Box在其他机器上运行，免去重新部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant package</span><br></pre></td></tr></table></figure><h3 id="8-其他命令解释"><a href="#8-其他命令解释" class="headerlink" title="8.其他命令解释"></a>8.其他命令解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add &quot;boxIdentity&quot; remoteUrlorLocalFile  添加box</span><br><span class="line">vagrant init &quot;boxIdentity&quot;  初始化box</span><br><span class="line">vagrant up  启动虚拟机</span><br><span class="line">vagrant ssh  登录虚拟机</span><br><span class="line">vagrant box list  显示当前已添加的box列表</span><br><span class="line">vagrant box remove &quot;boxIdentity&quot;  删除box</span><br><span class="line">vagrant destroy  停止当前正在运行的虚拟机并销毁所有创建的资源</span><br><span class="line">vagrant halt  关闭虚拟机</span><br><span class="line">vagrant package  打包当前运行的虚拟机的环境</span><br><span class="line">vagrant plugin  用于安装卸载插件</span><br><span class="line">vagrant reload  重启虚拟机，主要用于重新载入配置文件</span><br><span class="line">vagrant suspend  挂起虚拟机</span><br><span class="line">vagrant resume  恢复挂起状态</span><br><span class="line">vagrant ssh-config  输出ssh连接信息</span><br><span class="line">vagrant status  输出当前虚拟机的状态</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Vagrant </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vagrant </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于Centos部署Docker环境</title>
      <link href="/2017/03/02/%E5%9F%BA%E4%BA%8ECentos%E9%83%A8%E7%BD%B2Docker%E7%8E%AF%E5%A2%83/"/>
      <content type="html"><![CDATA[<h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos:6.8</span><br></pre></td></tr></table></figure><h4 id="将这个镜像启动成为一个容器-并映射端口"><a href="#将这个镜像启动成为一个容器-并映射端口" class="headerlink" title="将这个镜像启动成为一个容器,并映射端口"></a>将这个镜像启动成为一个容器,并映射端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name www -p 33060:3306 -p 220:22 -p 8080:80 centos：6.8 /bin/bash</span><br></pre></td></tr></table></figure><h4 id="查看创建的镜像"><a href="#查看创建的镜像" class="headerlink" title="查看创建的镜像"></a>查看创建的镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h4 id="进入创建的镜像容器"><a href="#进入创建的镜像容器" class="headerlink" title="进入创建的镜像容器"></a>进入创建的镜像容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;container ID&gt; bash</span><br></pre></td></tr></table></figure><h4 id="安装ifconfig"><a href="#安装ifconfig" class="headerlink" title="安装ifconfig"></a>安装ifconfig</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools –y</span><br></pre></td></tr></table></figure><h4 id="安装ssh服务"><a href="#安装ssh服务" class="headerlink" title="安装ssh服务"></a>安装ssh服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh*</span><br></pre></td></tr></table></figure><h4 id="安装压缩解压缩"><a href="#安装压缩解压缩" class="headerlink" title="安装压缩解压缩"></a>安装压缩解压缩</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y unzip zip</span><br></pre></td></tr></table></figure><h4 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><h4 id="创建SSH服务目录"><a href="#创建SSH服务目录" class="headerlink" title="创建SSH服务目录"></a>创建SSH服务目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/run/sshd</span><br></pre></td></tr></table></figure><h4 id="设置秘钥"><a href="#设置秘钥" class="headerlink" title="设置秘钥"></a>设置秘钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key</span><br><span class="line">ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span><br></pre></td></tr></table></figure><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/sshd -D &amp;</span><br></pre></td></tr></table></figure><h4 id="查看SSH监听端口使用情况"><a href="#查看SSH监听端口使用情况" class="headerlink" title="查看SSH监听端口使用情况"></a>查看SSH监听端口使用情况</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunlp</span><br></pre></td></tr></table></figure><h4 id="取消pam登录限制"><a href="#取消pam登录限制" class="headerlink" title="取消pam登录限制"></a>取消pam登录限制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -ri &apos;s/session required pam_loginuid.so/#session required pam_loginuid.so/g&apos; /etc/pam.d/ssh</span><br></pre></td></tr></table></figure><h4 id="本地创建公钥（非docker环境）-已有则不需要创建"><a href="#本地创建公钥（非docker环境）-已有则不需要创建" class="headerlink" title="本地创建公钥（非docker环境）,已有则不需要创建"></a>本地创建公钥（非docker环境）,已有则不需要创建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><h4 id="创建授权目录"><a href="#创建授权目录" class="headerlink" title="创建授权目录"></a>创建授权目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir root/.ssh</span><br></pre></td></tr></table></figure><h4 id="编辑授权文件-复制本地-ssh目录中的id-rsa-pub里面的密钥到授权文件中"><a href="#编辑授权文件-复制本地-ssh目录中的id-rsa-pub里面的密钥到授权文件中" class="headerlink" title="编辑授权文件,复制本地.ssh目录中的id_rsa.pub里面的密钥到授权文件中"></a>编辑授权文件,复制本地.ssh目录中的id_rsa.pub里面的密钥到授权文件中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h4 id="创建自动启动SSH服务器的可执行文件run-sh-并添加可执行权限"><a href="#创建自动启动SSH服务器的可执行文件run-sh-并添加可执行权限" class="headerlink" title="创建自动启动SSH服务器的可执行文件run.sh,并添加可执行权限"></a>创建自动启动SSH服务器的可执行文件run.sh,并添加可执行权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /run.sh</span><br><span class="line">chmod +x run.sh</span><br></pre></td></tr></table></figure><h4 id="编辑run-sh"><a href="#编辑run-sh" class="headerlink" title="编辑run.sh"></a>编辑run.sh</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">/usr/sbin/sshd -D</span><br></pre></td></tr></table></figure><h4 id="通过Xshell登录该镜像-地址为docker的IP，端口号为220-账号为：root-密码为上面设置的密码"><a href="#通过Xshell登录该镜像-地址为docker的IP，端口号为220-账号为：root-密码为上面设置的密码" class="headerlink" title="通过Xshell登录该镜像,地址为docker的IP，端口号为220,账号为：root,密码为上面设置的密码"></a>通过Xshell登录该镜像,地址为docker的IP，端口号为220,账号为：root,密码为上面设置的密码</h4><hr>]]></content>
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
